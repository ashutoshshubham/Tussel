{"ast":null,"code":"var _jsxFileName = \"D:\\\\Assignment\\\\Tussel\\\\Tussel\\\\Tussel\\\\frontend\\\\src\\\\components\\\\main\\\\UpdateComp_data.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateComp_data = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [compData, setCompData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const getCompDataById = async () => {\n    setLoading(true);\n    const res = await fetch('http://localhost:5000/competition/getbyid/' + id);\n    console.log(res.status);\n    if (res.status === 200) {\n      const data = await res.json();\n      console.log(data);\n      setCompData(data);\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    getCompDataById();\n  }, []);\n  const updateCompData = async formdata => {\n    console.log(formdata);\n    const res = await fetch('http://localhost:5000/competition/update/' + id, {\n      method: 'PUT',\n      body: JSON.stringify(formdata),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    console.log(res.status);\n    if (res.status === 200) {\n      Swal.fire({\n        icon: 'success',\n        title: 'Success',\n        text: 'Data Updated Successfully'\n      });\n      navigate('/display');\n    }\n  };\n  const showUpdateCompForm = () => {\n    if (!loading && compData) {}\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateComp_data, \"L9hOy/IWrO6SlTUGmb8LMMOrx6E=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UpdateComp_data;\nexport default UpdateComp_data;\nvar _c;\n$RefreshReg$(_c, \"UpdateComp_data\");","map":{"version":3,"names":["React","useNavigate","useParams","jsxDEV","_jsxDEV","UpdateComp_data","_s","id","compData","setCompData","useState","loading","setLoading","navigate","getCompDataById","res","fetch","console","log","status","data","json","useEffect","updateCompData","formdata","method","body","JSON","stringify","headers","Swal","fire","icon","title","text","showUpdateCompForm","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Assignment/Tussel/Tussel/Tussel/frontend/src/components/main/UpdateComp_data.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nconst UpdateComp_data = () => {\r\n\r\n    const {id} = useParams();\r\n    const [compData, setCompData] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const getCompDataById = async () => {\r\n        setLoading(true);\r\n        const res = await fetch('http://localhost:5000/competition/getbyid/' + id)\r\n        \r\n        console.log(res.status)\r\n\r\n        if (res.status === 200) {\r\n            const data = await res.json();\r\n            console.log(data)\r\n            setCompData(data)\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCompDataById();\r\n    }, [])\r\n\r\n    const updateCompData = async (formdata) => {\r\n        console.log(formdata)\r\n        const res = await fetch('http://localhost:5000/competition/update/' + id, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(formdata),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n\r\n        console.log(res.status)\r\n\r\n        if (res.status === 200) {\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'Success',\r\n                text: 'Data Updated Successfully'\r\n            })\r\n            navigate('/display')\r\n        }\r\n    }\r\n\r\n    const showUpdateCompForm = () => {\r\n        if(!loading && compData){}\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div></div>\r\n  )\r\n}\r\n\r\nexport default UpdateComp_data"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE1B,MAAM;IAACC;EAAE,CAAC,GAAGL,SAAS,EAAE;EACxB,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGF,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMG,QAAQ,GAAGZ,WAAW,EAAE;EAE9B,MAAMa,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChCF,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMG,GAAG,GAAG,MAAMC,KAAK,CAAC,4CAA4C,GAAGT,EAAE,CAAC;IAE1EU,OAAO,CAACC,GAAG,CAACH,GAAG,CAACI,MAAM,CAAC;IAEvB,IAAIJ,GAAG,CAACI,MAAM,KAAK,GAAG,EAAE;MACpB,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,EAAE;MAC7BJ,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;MACjBX,WAAW,CAACW,IAAI,CAAC;MACjBR,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAEDU,SAAS,CAAC,MAAM;IACZR,eAAe,EAAE;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,cAAc,GAAG,MAAOC,QAAQ,IAAK;IACvCP,OAAO,CAACC,GAAG,CAACM,QAAQ,CAAC;IACrB,MAAMT,GAAG,GAAG,MAAMC,KAAK,CAAC,2CAA2C,GAAGT,EAAE,EAAE;MACtEkB,MAAM,EAAE,KAAK;MACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC;MAC9BK,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IAEFZ,OAAO,CAACC,GAAG,CAACH,GAAG,CAACI,MAAM,CAAC;IAEvB,IAAIJ,GAAG,CAACI,MAAM,KAAK,GAAG,EAAE;MACpBW,IAAI,CAACC,IAAI,CAAC;QACNC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE,SAAS;QAChBC,IAAI,EAAE;MACV,CAAC,CAAC;MACFrB,QAAQ,CAAC,UAAU,CAAC;IACxB;EACJ,CAAC;EAED,MAAMsB,kBAAkB,GAAGA,CAAA,KAAM;IAC7B,IAAG,CAACxB,OAAO,IAAIH,QAAQ,EAAC,CAAC;EAC7B,CAAC;EAUH,oBACEJ,OAAA;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAW;AAEf,CAAC;AAAAjC,EAAA,CA/DKD,eAAe;EAAA,QAEJH,SAAS,EAILD,WAAW;AAAA;AAAAuC,EAAA,GAN1BnC,eAAe;AAiErB,eAAeA,eAAe;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}