[{"D:\\Assignment\\Tussel\\Tussel\\Tussel\\frontend\\src\\index.js":"1","D:\\Assignment\\Tussel\\Tussel\\Tussel\\frontend\\src\\App.js":"2","D:\\Assignment\\Tussel\\Tussel\\Tussel\\frontend\\src\\reportWebVitals.js":"3","D:\\Assignment\\Tussel\\Tussel\\Tussel\\frontend\\src\\components\\main\\Home.jsx":"4","D:\\Assignment\\Tussel\\Tussel\\Tussel\\frontend\\src\\components\\main\\Navbar.jsx":"5","D:\\Assignment\\Tussel\\Tussel\\Tussel\\frontend\\src\\components\\main\\SignUp.js":"6","D:\\Assignment\\Tussel\\Tussel\\Tussel\\frontend\\src\\components\\main\\SignIn.jsx":"7","D:\\Assignment\\Tussel\\Tussel\\Tussel\\frontend\\src\\components\\main\\ForgetPswd.jsx":"8","D:\\Assignment\\Tussel\\Tussel\\Tussel\\frontend\\src\\firebase.js":"9","D:\\Assignment\\Tussel\\Tussel\\Tussel\\frontend\\src\\components\\main\\Organisation_Pro.jsx":"10","D:\\Assignment\\Tussel\\Tussel\\Tussel\\frontend\\src\\components\\main\\Competition_det_entry.jsx":"11","D:\\Assignment\\Tussel\\Tussel\\Tussel\\frontend\\src\\components\\main\\Online_Comp.jsx":"12","D:\\Assignment\\Tussel\\Tussel\\Tussel\\frontend\\src\\components\\main\\Offline_Comp.jsx":"13"},{"size":535,"mtime":1680705961443,"results":"14","hashOfConfig":"15"},{"size":1777,"mtime":1680953146925,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1680705961858,"results":"17","hashOfConfig":"15"},{"size":125,"mtime":1680797577594,"results":"18","hashOfConfig":"15"},{"size":2101,"mtime":1680952194109,"results":"19","hashOfConfig":"15"},{"size":3453,"mtime":1680946573721,"results":"20","hashOfConfig":"15"},{"size":3685,"mtime":1680887763114,"results":"21","hashOfConfig":"15"},{"size":1652,"mtime":1680879787948,"results":"22","hashOfConfig":"15"},{"size":755,"mtime":1677087875000,"results":"23","hashOfConfig":"15"},{"size":4079,"mtime":1680950847093,"results":"24","hashOfConfig":"15"},{"size":1858,"mtime":1680953174900,"results":"25","hashOfConfig":"15"},{"size":3838,"mtime":1680971219071,"results":"26","hashOfConfig":"15"},{"size":4908,"mtime":1680972963921,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1hmxbap",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"31"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"31"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"31"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Assignment\\Tussel\\Tussel\\Tussel\\frontend\\src\\index.js",[],[],[],"D:\\Assignment\\Tussel\\Tussel\\Tussel\\frontend\\src\\App.js",["72","73","74","75"],[],"import './App.css';\nimport { BrowserRouter, Navigate, Route, Routes } from 'react-router-dom'\nimport Home from './components/main/Home';\nimport Navbar from './components/main/Navbar';\nimport SignUp from './components/main/SignUp';\nimport SignIn from './components/main/SignIn';\nimport ForgetPswd from './components/main/ForgetPswd';\nimport Organisation_Pro from './components/main/Organisation_Pro';\nimport Competition_det_entry from './components/main/Competition_det_entry';\nimport Online_Comp from './components/main/Online_Comp';\nimport Offline_Comp from './components/main/Offline_Comp';\n// import PhoneSignUp from './components/main/PhoneSignUp';\n// import ProtectedRoute from './components/main/ProtectedRoute';\n// import { UserAuthContextProvider } from './context/UserAuthContext';\n\n\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Navbar />\n      {/* <UserAuthContextProvider> */}\n        <Routes>\n          <Route element={<Navigate to='/homepage' />} path='/' />\n          {/* <Route element={<ProtectedRoute><Home /></ProtectedRoute>} path='/homepage' /> */}\n          <Route element={<SignUp />} path='signup' />\n          <Route element={<Home />} path='homepage' />\n          <Route element={<SignIn />} path='signin' />\n          <Route element={<ForgetPswd />} path='forgetpswd' />\n          <Route element={<Organisation_Pro />} path='organisationPro' />\n          <Route element={<Competition_det_entry />} path='Competition_det_entry' />\n          <Route element={<Online_Comp/>} path='onlineComp' />\n          <Route element={<Offline_Comp/>} path='offlineComp' />\n          {/* <Route element={<PhoneSignUp />} path='phonesignup' /> */}\n        </Routes>\n      {/* </UserAuthContextProvider> */}\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","D:\\Assignment\\Tussel\\Tussel\\Tussel\\frontend\\src\\reportWebVitals.js",[],[],"D:\\Assignment\\Tussel\\Tussel\\Tussel\\frontend\\src\\components\\main\\Home.jsx",[],[],"D:\\Assignment\\Tussel\\Tussel\\Tussel\\frontend\\src\\components\\main\\Navbar.jsx",[],[],"D:\\Assignment\\Tussel\\Tussel\\Tussel\\frontend\\src\\components\\main\\SignUp.js",["76"],[],"import React from 'react'\r\nimport { Formik } from 'formik'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n\r\nconst Signup = () => {\r\n\r\n  const navigate = useNavigate();\r\n\r\n\r\n\r\n  const addOrg = async () => {\r\n    // console.log(formdata)\r\n    // resetForm()\r\n\r\n    const res = await fetch('http://localhost:5000/organisation/add', {\r\n      method: 'POST',\r\n      body: JSON.stringify({}),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n\r\n    console.log(res.status);\r\n\r\n    if (res.status === 200) {\r\n      Swal.fire({\r\n        icon: 'success',\r\n        title: 'Success',\r\n        text: 'Signed Successfully'\r\n      })\r\n      const data = await res.json();\r\n      return data._id;\r\n      // navigate('/user');\r\n    }\r\n\r\n  }\r\n  const userSubmit = async (formdata, {resetForm}) => {\r\n\r\n    let OrgId = await addOrg();\r\n    formdata.organisation = OrgId;\r\n\r\n    console.log(formdata)\r\n    resetForm()\r\n\r\n    const res = await fetch('http://localhost:5000/user/add', {\r\n      method: 'POST',\r\n      body: JSON.stringify(formdata),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n\r\n    console.log(res.status);\r\n\r\n    if (res.status === 200) {\r\n      Swal.fire({\r\n        icon: 'success',\r\n        title: 'Success',\r\n        text: 'Signed Successfully'\r\n      })\r\n      // navigate('/user');\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='container my-5'>\r\n\r\n      <div className=\"row\">\r\n\r\n        <div className=\"col-md-6\">\r\n          <img src=\"https://img.freepik.com/premium-vector/isometric-style-illustration-about-registration-app-login-website-online-game_529804-422.jpg\" alt=\"\" style={{ width: '100%' }} />\r\n        </div>\r\n\r\n        <div className=\"col-md-6\">\r\n\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h1 className=\"card-title text-center\">CREATE ACCOUNT</h1>\r\n\r\n              <Formik\r\n                initialValues={{ name: \"\",  email: \"\", password: \"\",organisation: \"\" }}\r\n                onSubmit={userSubmit}\r\n              >\r\n                {\r\n                  ({ values, handleChange, handleSubmit }) => (\r\n                    <form onSubmit={handleSubmit}>\r\n\r\n                      <label>Name</label>\r\n                      <input required type=\"text\" className='form-control mb-3' name=\"name\" onChange={handleChange} value={values.name} />\r\n\r\n                      <label>Email</label>\r\n                      <input required type=\"email\" className='form-control mb-3' name=\"email\" onChange={handleChange} value={values.email} />\r\n\r\n                      <label>Password</label>\r\n                      <input required type=\"password\" className='form-control mb-3' name=\"password\" onChange={handleChange} value={values.password} />\r\n\r\n                      {/* <label>Organisation</label>\r\n                      <input required type=\"text\" className='form-control mb-3' name=\"organisation\" onChange={handleChange} value={values.organisation} /> */}\r\n\r\n                      <button type=\"submit\" className=\"btn btn-primary w-100 mb-3\">Submit</button>\r\n                    </form>\r\n                  )\r\n                }\r\n              </Formik>\r\n\r\n              <p className='text-center'>Already have account? <Link to='/signin'>SignIn</Link></p>\r\n\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Signup","D:\\Assignment\\Tussel\\Tussel\\Tussel\\frontend\\src\\components\\main\\SignIn.jsx",["77"],[],"import React from 'react'\r\nimport { Formik } from \"formik\"\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport Swal from \"sweetalert2\"\r\n\r\nconst SignIn = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const loginSubmit = async (formdata, { resetForm, setSubmitting }) => {\r\n        console.log(formdata)\r\n        resetForm()\r\n        setSubmitting(true)\r\n\r\n        const res = await fetch('http://localhost:5000/user/authenticate', {\r\n            method: 'POST',\r\n            body: JSON.stringify(formdata),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        console.log(res.status)\r\n\r\n        if (res.status === 200) {\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'Success',\r\n                text: 'Login Successful'\r\n            })\r\n            // navigate('/user');\r\n        }\r\n        else if (res.status === 401) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: 'Email or Password is incorrect'\r\n            })\r\n        }\r\n        else {\r\n            Swal.fire({\r\n                iicon: 'error',\r\n                title: 'Error',\r\n                text: 'Something went wrong'\r\n            })\r\n        }\r\n\r\n        setTimeout(() => {\r\n            setSubmitting(false)\r\n        }, 2000)\r\n    }\r\n\r\n    return (\r\n\r\n        // <div className='col-md-3 mx-auto mt-5'>\r\n\r\n        //   <Card className='mb-5'>\r\n        //     <CardContent>\r\n        //       <TextField fullWidth variant='standard' sx={{mb: 5}} label=\"Email Address\" value={\"\"} />\r\n        //       <TextField fullWidth type=\"password\" variant='standard' sx={{mb: 5}} label=\"Password\" value={\"\"}/>\r\n\r\n        //       <Button color='primary' fullWidth>Submit</Button>\r\n        //     </CardContent>\r\n        //   </Card>\r\n\r\n\r\n\r\n        // </div>\r\n\r\n        <div className='container'>\r\n\r\n            <div className=\"row mt-5\">\r\n\r\n                <div className=\"col-md-6\">\r\n                    <img src=\"https://theuniqueacademy.co.in/assets/images/test.png\" alt=\"\" style={{ width: '100%' }} />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 my-auto\">\r\n\r\n                    <h1 className='text-center mb-3'>LOGIN FORM</h1>\r\n\r\n                    <Formik\r\n                        initialValues={{ email: \"\", password: \"\" }}\r\n                        onSubmit={loginSubmit}>\r\n                        {({ values, handleSubmit, handleChange, isSubmitting }) => (\r\n                            <form onSubmit={handleSubmit}>\r\n                                <label>Email Address</label>\r\n                                <input required type=\"email\" className=\"form-control mb-3\" value={values.email} name=\"email\" onChange={handleChange} />\r\n\r\n                                <label>Password</label>\r\n                                <input required type=\"password\" className=\"form-control mb-3\" value={values.password} name=\"password\" onChange={handleChange} />\r\n\r\n                                <Link to=\"/forgetpswd\" className=\"\">\r\n                                    Forgot Password\r\n                                </Link>\r\n\r\n                                <button type=\"submit\" className=\"btn btn-success w-100 my-2\">\r\n                                    {isSubmitting ? <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> : \"Submit\"}\r\n                                </button>\r\n                            </form>\r\n                        )}\r\n                    </Formik>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default SignIn","D:\\Assignment\\Tussel\\Tussel\\Tussel\\frontend\\src\\components\\main\\ForgetPswd.jsx",[],[],"D:\\Assignment\\Tussel\\Tussel\\Tussel\\frontend\\src\\firebase.js",[],[],"D:\\Assignment\\Tussel\\Tussel\\Tussel\\frontend\\src\\components\\main\\Organisation_Pro.jsx",["78"],[],"import React, { useEffect, useState } from 'react'\r\nimport { Formik } from 'formik'\r\n\r\nconst Organisation_Pro = () => {\r\n\r\n    const [org, setOrg] = useState([])\r\n\r\n    const fetchOrgData = async (id) => {\r\n        const res = await fetch('http://localhost:5000/organisation/getbyid/' + id)\r\n\r\n        const data = await res.json();\r\n        console.log(data)\r\n        setOrg(data)\r\n    }\r\n\r\n    // console.log(res.status)\r\n\r\n    useEffect(() => {\r\n        fetchOrgData();\r\n    }, [])\r\n\r\n    const orgSubmit = async (formdata, { resetForm }) => {\r\n\r\n\r\n        console.log(formdata)\r\n        resetForm()\r\n\r\n        const res = await fetch('http://localhost:5000/organisation/add', {\r\n            method: 'POST',\r\n            body: JSON.stringify(formdata),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        console.log(res.status)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card w-50 mx-auto mt-2\">\r\n                <div className=\"card-body\">\r\n                    <h2 className=\"card-title text-center mb-5\">ORGANISATION DETAIL</h2>\r\n                    <div className=\"mb-2\">\r\n                        <label className=\"form-label\" htmlFor=\"formControlDisabled\">\r\n                            Name\r\n                        </label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            id=\"formControlDisabled\"\r\n                            type=\"text\"\r\n                            aria-label=\"disabled input example\"\r\n                            disabled\r\n\r\n                        />\r\n                    </div>\r\n                    <div className=\"mb-2\">\r\n                        <label className=\"form-label\" htmlFor=\"formControlDisabled\">\r\n                            Email\r\n                        </label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            id=\"formControlDisabled\"\r\n                            type=\"text\"\r\n                            aria-label=\"disabled input example\"\r\n                            disabled\r\n                        />\r\n                    </div>\r\n\r\n                    <Formik\r\n                        initialValues={{ org_name: '', org_details: '' }}\r\n                        onSubmit={orgSubmit}>\r\n                        {({ values, handleChange, handleSubmit }) => (\r\n                            <form onSubmit={handleSubmit}>\r\n\r\n                                <div className=\"mb-2\">\r\n                                    <label className=\"form-label\" htmlFor=\"form12\">\r\n                                        Organisation Name\r\n                                    </label>\r\n                                    <input type=\"text\" id=\"form12\" className=\"form-control\" name='org_name' onChange={handleChange} value={values.org_name}/>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label className=\"form-label\" htmlFor=\"textAreaExample\">\r\n                                        Organisation Details\r\n                                    </label>\r\n                                    <textarea\r\n                                        className=\"form-control\"\r\n                                        id=\"textAreaExample\"\r\n                                        rows={4}\r\n                                        name='org_details'\r\n                                        onChange={handleChange}\r\n                                        value={values.org_details}\r\n                                    />\r\n                                </div>\r\n\r\n                                <button type=\"submit\" className=\"btn btn-primary\">\r\n                                    Submit\r\n                                </button>\r\n\r\n\r\n                            </form>\r\n                        )}\r\n                    </Formik>\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Organisation_Pro","D:\\Assignment\\Tussel\\Tussel\\Tussel\\frontend\\src\\components\\main\\Competition_det_entry.jsx",[],[],"D:\\Assignment\\Tussel\\Tussel\\Tussel\\frontend\\src\\components\\main\\Online_Comp.jsx",[],[],"D:\\Assignment\\Tussel\\Tussel\\Tussel\\frontend\\src\\components\\main\\Offline_Comp.jsx",[],[],{"ruleId":"79","severity":1,"message":"80","line":31,"column":27,"nodeType":"81","messageId":"82","endLine":31,"endColumn":47},{"ruleId":"79","severity":1,"message":"83","line":32,"column":27,"nodeType":"81","messageId":"82","endLine":32,"endColumn":52},{"ruleId":"79","severity":1,"message":"84","line":33,"column":27,"nodeType":"81","messageId":"82","endLine":33,"endColumn":41},{"ruleId":"79","severity":1,"message":"85","line":34,"column":27,"nodeType":"81","messageId":"82","endLine":34,"endColumn":42},{"ruleId":"86","severity":1,"message":"87","line":10,"column":9,"nodeType":"88","messageId":"89","endLine":10,"endColumn":17},{"ruleId":"86","severity":1,"message":"87","line":7,"column":11,"nodeType":"88","messageId":"89","endLine":7,"endColumn":19},{"ruleId":"86","severity":1,"message":"90","line":6,"column":12,"nodeType":"88","messageId":"89","endLine":6,"endColumn":15},"react/jsx-pascal-case","Imported JSX component Organisation_Pro must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Competition_det_entry must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Online_Comp must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Offline_Comp must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'navigate' is assigned a value but never used.","Identifier","unusedVar","'org' is assigned a value but never used."]